// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace IsATriangleTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Test input is 5,6,8
        /// </summary>
        public void TestInput1()
        {
            #region Variable Declarations
            WpfEdit uIFirstSideTbEdit = this.UIIsATriangleWindow.UIFirstSideTbEdit;
            WpfEdit uISecondSideTbEdit = this.UIIsATriangleWindow.UISecondSideTbEdit;
            WpfEdit uIThirdSideTbEdit = this.UIIsATriangleWindow.UIThirdSideTbEdit;
            WpfButton uICalcTriangleTypeButton = this.UIIsATriangleWindow.UICalcTriangleTypeButton;
            WpfEdit uIOutputEdit = this.UIIsATriangleWindow.UIOutputEdit;
            #endregion

            // Type '5' in 'FirstSideTb' text box
            uIFirstSideTbEdit.Text = this.TestInput1Params.UIFirstSideTbEditText;

            // Type '{Tab}' in 'FirstSideTb' text box
            Keyboard.SendKeys(uIFirstSideTbEdit, this.TestInput1Params.UIFirstSideTbEditSendKeys, ModifierKeys.None);

            // Type '6' in 'SecondSideTb' text box
            uISecondSideTbEdit.Text = this.TestInput1Params.UISecondSideTbEditText;

            // Type '{Tab}' in 'SecondSideTb' text box
            Keyboard.SendKeys(uISecondSideTbEdit, this.TestInput1Params.UISecondSideTbEditSendKeys, ModifierKeys.None);

            // Type '8' in 'ThirdSideTb' text box
            uIThirdSideTbEdit.Text = this.TestInput1Params.UIThirdSideTbEditText;

            // Click 'Calc Triangle Type' button
            Mouse.Click(uICalcTriangleTypeButton, new Point(77, 27));

            // Type '5' in 'FirstSideTb' text box
            uIFirstSideTbEdit.Text = this.TestInput1Params.UIFirstSideTbEditText1;

            // Type '{Tab}' in 'FirstSideTb' text box
            Keyboard.SendKeys(uIFirstSideTbEdit, this.TestInput1Params.UIFirstSideTbEditSendKeys1, ModifierKeys.None);

            // Type '6' in 'SecondSideTb' text box
            uISecondSideTbEdit.Text = this.TestInput1Params.UISecondSideTbEditText1;

            // Type '{Tab}' in 'SecondSideTb' text box
            Keyboard.SendKeys(uISecondSideTbEdit, this.TestInput1Params.UISecondSideTbEditSendKeys1, ModifierKeys.None);

            // Type '8' in 'ThirdSideTb' text box
            uIThirdSideTbEdit.Text = this.TestInput1Params.UIThirdSideTbEditText1;

            // Type '{Tab}' in 'ThirdSideTb' text box
            Keyboard.SendKeys(uIThirdSideTbEdit, this.TestInput1Params.UIThirdSideTbEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'Output' text box
            Keyboard.SendKeys(uIOutputEdit, this.TestInput1Params.UIOutputEditSendKeys, ModifierKeys.None);

            // Click 'Calc Triangle Type' button
            Mouse.Click(uICalcTriangleTypeButton, new Point(90, 28));
        }
        
        /// <summary>
        /// AssetTest1 - Use 'AssetTest1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssetTest1()
        {
            #region Variable Declarations
            WpfEdit uIOutputEdit = this.UIIsATriangleWindow.UIOutputEdit;
            #endregion

            // Verify that the 'Text' property of 'Output' text box equals 'ScaleneTriangle'
            Assert.AreEqual(this.AssetTest1ExpectedValues.UIOutputEditText, uIOutputEdit.Text);
        }
        
        #region Properties
        public virtual TestInput1Params TestInput1Params
        {
            get
            {
                if ((this.mTestInput1Params == null))
                {
                    this.mTestInput1Params = new TestInput1Params();
                }
                return this.mTestInput1Params;
            }
        }
        
        public virtual AssetTest1ExpectedValues AssetTest1ExpectedValues
        {
            get
            {
                if ((this.mAssetTest1ExpectedValues == null))
                {
                    this.mAssetTest1ExpectedValues = new AssetTest1ExpectedValues();
                }
                return this.mAssetTest1ExpectedValues;
            }
        }
        
        public UIIsATriangleWindow UIIsATriangleWindow
        {
            get
            {
                if ((this.mUIIsATriangleWindow == null))
                {
                    this.mUIIsATriangleWindow = new UIIsATriangleWindow();
                }
                return this.mUIIsATriangleWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestInput1Params mTestInput1Params;
        
        private AssetTest1ExpectedValues mAssetTest1ExpectedValues;
        
        private UIIsATriangleWindow mUIIsATriangleWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestInput1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestInput1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '5' in 'FirstSideTb' text box
        /// </summary>
        public string UIFirstSideTbEditText = "5";
        
        /// <summary>
        /// Type '{Tab}' in 'FirstSideTb' text box
        /// </summary>
        public string UIFirstSideTbEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '6' in 'SecondSideTb' text box
        /// </summary>
        public string UISecondSideTbEditText = "6";
        
        /// <summary>
        /// Type '{Tab}' in 'SecondSideTb' text box
        /// </summary>
        public string UISecondSideTbEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '8' in 'ThirdSideTb' text box
        /// </summary>
        public string UIThirdSideTbEditText = "8";
        
        /// <summary>
        /// Type '5' in 'FirstSideTb' text box
        /// </summary>
        public string UIFirstSideTbEditText1 = "5";
        
        /// <summary>
        /// Type '{Tab}' in 'FirstSideTb' text box
        /// </summary>
        public string UIFirstSideTbEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '6' in 'SecondSideTb' text box
        /// </summary>
        public string UISecondSideTbEditText1 = "6";
        
        /// <summary>
        /// Type '{Tab}' in 'SecondSideTb' text box
        /// </summary>
        public string UISecondSideTbEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '8' in 'ThirdSideTb' text box
        /// </summary>
        public string UIThirdSideTbEditText1 = "8";
        
        /// <summary>
        /// Type '{Tab}' in 'ThirdSideTb' text box
        /// </summary>
        public string UIThirdSideTbEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Output' text box
        /// </summary>
        public string UIOutputEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssetTest1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssetTest1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Output' text box equals 'ScaleneTriangle'
        /// </summary>
        public string UIOutputEditText = "ScaleneTriangle";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIIsATriangleWindow : WpfWindow
    {
        
        public UIIsATriangleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Is A Triangle";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Is A Triangle");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIFirstSideTbEdit
        {
            get
            {
                if ((this.mUIFirstSideTbEdit == null))
                {
                    this.mUIFirstSideTbEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIFirstSideTbEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "FirstSideTb";
                    this.mUIFirstSideTbEdit.WindowTitles.Add("Is A Triangle");
                    #endregion
                }
                return this.mUIFirstSideTbEdit;
            }
        }
        
        public WpfEdit UISecondSideTbEdit
        {
            get
            {
                if ((this.mUISecondSideTbEdit == null))
                {
                    this.mUISecondSideTbEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUISecondSideTbEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SecondSideTb";
                    this.mUISecondSideTbEdit.WindowTitles.Add("Is A Triangle");
                    #endregion
                }
                return this.mUISecondSideTbEdit;
            }
        }
        
        public WpfEdit UIThirdSideTbEdit
        {
            get
            {
                if ((this.mUIThirdSideTbEdit == null))
                {
                    this.mUIThirdSideTbEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIThirdSideTbEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ThirdSideTb";
                    this.mUIThirdSideTbEdit.WindowTitles.Add("Is A Triangle");
                    #endregion
                }
                return this.mUIThirdSideTbEdit;
            }
        }
        
        public WpfButton UICalcTriangleTypeButton
        {
            get
            {
                if ((this.mUICalcTriangleTypeButton == null))
                {
                    this.mUICalcTriangleTypeButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICalcTriangleTypeButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Check";
                    this.mUICalcTriangleTypeButton.WindowTitles.Add("Is A Triangle");
                    #endregion
                }
                return this.mUICalcTriangleTypeButton;
            }
        }
        
        public WpfEdit UIOutputEdit
        {
            get
            {
                if ((this.mUIOutputEdit == null))
                {
                    this.mUIOutputEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIOutputEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Output";
                    this.mUIOutputEdit.WindowTitles.Add("Is A Triangle");
                    #endregion
                }
                return this.mUIOutputEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIFirstSideTbEdit;
        
        private WpfEdit mUISecondSideTbEdit;
        
        private WpfEdit mUIThirdSideTbEdit;
        
        private WpfButton mUICalcTriangleTypeButton;
        
        private WpfEdit mUIOutputEdit;
        #endregion
    }
}
